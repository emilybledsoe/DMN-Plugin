{"version":3,"sources":["../../src/base/Manager.js"],"names":["EventBus","DmnModdle","CamundaModdle","domify","query","domQuery","remove","domRemove","assign","debounce","every","find","isDefined","isFunction","isNumber","DEFAULT_CONTAINER_OPTIONS","width","height","position","Manager","options","_emit","views","_views","activeView","_activeView","_eventBus","_viewsChanged","_viewers","_init","xml","done","open","noop","_moddle","fromXML","err","definitions","context","error","parseWarnings","warnings","_setDefinitions","checkDMNCompatibilityError","checkValidationError","warmings","view","_getInitialView","Error","allWarnings","concat","_definitions","getActiveView","_getViewer","element","filter","v","toXML","e","console","on","off","once","parentNode","get","constructor","prototype","jquery","appendChild","_container","Object","keys","forEach","viewerId","viewer","safeExecute","_options","_createModdle","container","containerOptions","style","ensureUnit","attachTo","_switchView","_updateViews","viewProviders","_getViewProviders","displayableElements","drgElement","newViews","provider","opens","$type","id","name","type","push","newActiveView","viewsEqual","activeViewChanged","viewNameChanged","viewsChanged","length","newView","complete","activeViewer","newViewer","detach","_createViewer","Viewer","providerOptions","commonOptions","common","additionalModules","_parent","moddle","fire","camunda","moddleExtensions","val","message","olderDMNVersion","indexOf","pattern","match","exec","a","b","method"],"mappings":"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","sourcesContent":["import EventBus from 'diagram-js/lib/core/EventBus';\n\nimport DmnModdle from 'dmn-moddle';\n\nimport CamundaModdle from 'camunda-dmn-moddle/resources/camunda.json';\n\nimport {\n  domify,\n  query as domQuery,\n  remove as domRemove\n} from 'min-dom';\n\nimport {\n  assign,\n  debounce,\n  every,\n  find,\n  isDefined,\n  isFunction,\n  isNumber\n} from 'min-dash';\n\n\nconst DEFAULT_CONTAINER_OPTIONS = {\n  width: '100%',\n  height: '100%',\n  position: 'relative'\n};\n\n/**\n * The base class for DMN viewers and editors.\n *\n * @abstract\n */\nexport default class Manager {\n\n  /**\n   * Create a new instance with the given options.\n   *\n   * @param  {Object} options\n   *\n   * @return {Manager}\n   */\n  constructor(options={}) {\n    this._eventBus = new EventBus();\n\n    this._viewsChanged = debounce(this._viewsChanged, 0);\n\n    this._views = [];\n    this._viewers = {};\n\n    this._init(options);\n  }\n\n  /**\n   * Parse and render a DMN diagram.\n   *\n   * Once finished the viewer reports back the result to the\n   * provided callback function with (err, warnings).\n   *\n   * ## Life-Cycle Events\n   *\n   * During import the viewer will fire life-cycle events:\n   *\n   *   * import.parse.start (about to read model from xml)\n   *   * import.parse.complete (model read; may have worked or not)\n   *   * import.render.start (graphical import start)\n   *   * import.render.complete (graphical import finished)\n   *   * import.done (everything done)\n   *\n   * You can use these events to hook into the life-cycle.\n   *\n   * @param {string} xml the DMN xml\n   * @param {Object} [options]\n   * @param {boolean} [options.open=true]\n   * @param {Function} [done] invoked with (err, warnings=[])\n   */\n  importXML(xml, options, done) {\n\n    if (typeof options !== 'object') {\n      done = options;\n      options = { open: true };\n    }\n\n    if (typeof done !== 'function') {\n      done = noop;\n    }\n\n    // hook in pre-parse listeners +\n    // allow xml manipulation\n    xml = this._emit('import.parse.start', { xml: xml }) || xml;\n\n    this._moddle.fromXML(xml, 'dmn:Definitions', (err, definitions, context) => {\n\n      // hook in post parse listeners +\n      // allow definitions manipulation\n      definitions = this._emit('import.parse.complete', {\n        error: err,\n        definitions: definitions,\n        context: context\n      }) || definitions;\n\n      var parseWarnings = context.warnings;\n\n      this._setDefinitions(definitions);\n\n      if (err) {\n        err = checkDMNCompatibilityError(err, xml) || checkValidationError(err) || err;\n      }\n\n      if (err || !options.open) {\n        this._emit('import.done', { error: err, warmings: parseWarnings });\n\n        return done(err, parseWarnings);\n      }\n\n      var view = this._activeView || this._getInitialView(this._views);\n\n      if (!view) {\n        return done(new Error('no displayable contents'));\n      }\n\n      this.open(view, (err, warnings) => {\n\n        var allWarnings = [].concat(parseWarnings, warnings || []);\n\n        this._emit('import.done', { error: err, warnings: allWarnings });\n\n        done(err, allWarnings);\n      });\n    });\n  }\n\n  getDefinitions() {\n    return this._definitions;\n  }\n\n  /**\n   * Return active view.\n   *\n   * @return {View}\n   */\n  getActiveView() {\n    return this._activeView;\n  }\n\n  /**\n   * Get the currently active viewer instance.\n   *\n   * @return {View}\n   */\n  getActiveViewer() {\n    var activeView = this.getActiveView();\n\n    return activeView && this._getViewer(activeView);\n  }\n\n  getView(element) {\n    return this._views.filter(function(v) {\n      return v.element === element;\n    })[0];\n  }\n\n  getViews() {\n    return this._views;\n  }\n\n  /**\n   * Export the currently displayed DMN diagram as\n   * a DMN XML document.\n   *\n   * ## Life-Cycle Events\n   *\n   * During XML saving the viewer will fire life-cycle events:\n   *\n   *   * saveXML.start (before serialization)\n   *   * saveXML.serialized (after xml generation)\n   *   * saveXML.done (everything done)\n   *\n   * You can use these events to hook into the life-cycle.\n   *\n   * @param {Object} [options] export options\n   * @param {boolean} [options.format=false] output formated XML\n   * @param {boolean} [options.preamble=true] output preamble\n   * @param {Function} done invoked with (err, xml)\n   */\n  saveXML(options, done) {\n\n    if (typeof options === 'function') {\n      done = options;\n      options = {};\n    }\n\n    var definitions = this._definitions;\n\n    if (!definitions) {\n      return done(new Error('no definitions loaded'));\n    }\n\n    // allow to fiddle around with definitions\n    definitions = this._emit('saveXML.start', {\n      definitions: definitions\n    }) || definitions;\n\n    this._moddle.toXML(definitions, options, (err, xml) => {\n\n      try {\n        xml = this._emit('saveXML.serialized', {\n          error: err,\n          xml: xml\n        }) || xml;\n\n        this._emit('saveXML.done', {\n          error: err,\n          xml: xml\n        });\n      } catch (e) {\n        console.error('error in saveXML life-cycle listener', e);\n      }\n\n      done(err, xml);\n    });\n  }\n\n  /**\n   * Register an event listener\n   *\n   * Remove a previously added listener via {@link #off(event, callback)}.\n   *\n   * @param {string} event\n   * @param {number} [priority]\n   * @param {Function} callback\n   * @param {Object} [that]\n   */\n  on(...args) {\n    this._eventBus.on(...args);\n  }\n\n  /**\n   * De-register an event listener\n   *\n   * @param {string} event\n   * @param {Function} callback\n   */\n  off(...args) {\n    this._eventBus.off(...args);\n  }\n\n  /**\n   * Register a listener to be invoked once only.\n   *\n   * @param {string} event\n   * @param {number} [priority]\n   * @param {Function} callback\n   * @param {Object} [that]\n   */\n  once(...args) {\n    this._eventBus.once(...args);\n  }\n\n  attachTo(parentNode) {\n\n    // unwrap jQuery if provided\n    if (parentNode.get && parentNode.constructor.prototype.jquery) {\n      parentNode = parentNode.get(0);\n    }\n\n    if (typeof parentNode === 'string') {\n      parentNode = domQuery(parentNode);\n    }\n\n    parentNode.appendChild(this._container);\n\n    this._emit('attach', {});\n  }\n\n  detach() {\n    this._emit('detach', {});\n\n    domRemove(this._container);\n  }\n\n  destroy() {\n    Object.keys(this._viewers).forEach((viewerId) => {\n      var viewer = this._viewers[viewerId];\n\n      safeExecute(viewer, 'destroy');\n    });\n\n    domRemove(this._container);\n  }\n\n  _init(options) {\n    this._options = options;\n\n    this._moddle = this._createModdle(options);\n\n    this._viewers = {};\n    this._views = [];\n\n    const container = domify('<div class=\"dmn-js-parent\"></div>');\n\n    const containerOptions = assign({}, DEFAULT_CONTAINER_OPTIONS, options);\n\n    assign(container.style, {\n      width: ensureUnit(containerOptions.width),\n      height: ensureUnit(containerOptions.height),\n      position: containerOptions.position\n    });\n\n    this._container = container;\n\n    if (options.container) {\n      this.attachTo(options.container);\n    }\n  }\n\n  /**\n   * Open diagram element.\n   *\n   * @param  {ModdleElement}   element\n   * @param  {Function} [done]\n   */\n  open(view, done=noop) {\n    this._switchView(view, done);\n  }\n\n  _setDefinitions(definitions) {\n    this._definitions = definitions;\n\n    this._updateViews();\n  }\n\n  _viewsChanged = () => {\n    this._emit('views.changed', {\n      views: this._views,\n      activeView: this._activeView\n    });\n  }\n\n  /**\n   * Recompute changed views after elements in\n   * the DMN diagram have changed.\n   */\n  _updateViews() {\n\n    var definitions = this._definitions;\n\n    if (!definitions) {\n      this._views = [];\n      this._switchView(null);\n\n      return;\n    }\n\n    var viewProviders = this._getViewProviders();\n\n    var displayableElements = [ definitions, ...(definitions.drgElement || []) ];\n\n    // compute list of available views\n    var views = this._views,\n        newViews = [];\n\n    for (var element of displayableElements) {\n      var provider = find(viewProviders, function(provider) {\n        if (typeof provider.opens === 'string') {\n          return provider.opens === element.$type;\n        } else {\n          return provider.opens(element);\n        }\n      });\n\n      if (!provider) {\n        continue;\n      }\n\n      var view = {\n        element,\n        id: element.id,\n        name: element.name,\n        type: provider.id\n      };\n\n      newViews.push(view);\n    }\n\n    var activeView = this._activeView,\n        newActiveView;\n\n    if (activeView) {\n\n      // check the new active view\n      newActiveView = find(newViews, function(view) {\n        return viewsEqual(activeView, view);\n      }) || this._getInitialView(newViews);\n\n      if (!newActiveView) {\n        return this._switchView(null);\n      }\n    }\n\n    // Views have changed if\n    // active view has changed OR\n    // number of views has changed OR\n    // not all views equal\n    var activeViewChanged = !viewsEqual(activeView, newActiveView)\n      || viewNameChanged(activeView, newActiveView);\n\n    var viewsChanged = views.length !== newViews.length\n        || !every(newViews, function(newView) {\n          return find(views, function(view) {\n            return viewsEqual(view, newView) && !viewNameChanged(view, newView);\n          });\n        });\n\n    this._activeView = newActiveView;\n    this._views = newViews;\n\n    if (activeViewChanged || viewsChanged) {\n      this._viewsChanged();\n    }\n  }\n\n  _getInitialView(views) {\n    return views[0];\n  }\n\n  /**\n   * Switch to another view.\n   *\n   * @param  {View} newView\n   * @param  {Function} [done]\n   */\n  _switchView(newView, done=noop) {\n\n    var complete = (err, warnings) => {\n      this._viewsChanged();\n\n      done(err, warnings);\n    };\n\n    var activeView = this.getActiveView(),\n        activeViewer;\n\n    var newViewer = newView && this._getViewer(newView),\n        element = newView && newView.element;\n\n    if (activeView) {\n      activeViewer = this._getViewer(activeView);\n\n      if (activeViewer !== newViewer) {\n        safeExecute(activeViewer, 'clear');\n\n        activeViewer.detach();\n      }\n    }\n\n    this._activeView = newView;\n\n    if (newViewer) {\n\n      if (activeViewer !== newViewer) {\n        newViewer.attachTo(this._container);\n      }\n\n      this._emit('import.render.start', {\n        view: newView,\n        element: element\n      });\n\n      return newViewer.open(element, (err, warnings) => {\n\n        this._emit('import.render.complete', {\n          view: newView,\n          error: err,\n          warnings: warnings\n        });\n\n        complete(err, warnings);\n      });\n    }\n\n    // no active view\n    complete();\n  }\n\n  _getViewer(view) {\n\n    var type = view.type;\n\n    var viewer = this._viewers[type];\n\n    if (!viewer) {\n      viewer = this._viewers[type] = this._createViewer(view.type);\n\n      this._emit('viewer.created', {\n        type: type,\n        viewer: viewer\n      });\n    }\n\n    return viewer;\n  }\n\n  _createViewer(id) {\n\n    var provider = find(this._getViewProviders(), function(provider) {\n      return provider.id === id;\n    });\n\n    if (!provider) {\n      throw new Error('no provider for view type <' + id + '>');\n    }\n\n    var Viewer = provider.constructor;\n\n    var providerOptions = this._options[id] || {};\n    var commonOptions = this._options.common || {};\n\n    return new Viewer({\n      ...commonOptions,\n      ...providerOptions,\n      additionalModules: [\n        ...(providerOptions.additionalModules || []), {\n          _parent: [ 'value', this ],\n          moddle: [ 'value', this._moddle ]\n        }\n      ]\n    });\n  }\n\n  /**\n   * Emit an event.\n   */\n  _emit(...args) {\n    this._eventBus.fire(...args);\n  }\n\n  _createModdle(options) {\n    return new DmnModdle(assign({\n      camunda: CamundaModdle\n    }, options.moddleExtensions));\n  }\n\n  /**\n   * Return the list of available view providers.\n   *\n   * @abstract\n   *\n   * @return {Array<ViewProvider>}\n   */\n  _getViewProviders() {\n    return [];\n  }\n\n}\n\n\n// helpers //////////////////////\n\nfunction noop() {}\n\n/**\n * Ensure the passed argument is a proper unit (defaulting to px)\n */\nfunction ensureUnit(val) {\n  return val + (isNumber(val) ? 'px' : '');\n}\n\nfunction checkDMNCompatibilityError(err, xml) {\n\n  // check if we can indicate opening of old DMN 1.1 or DMN 1.2 diagrams\n\n  if (err.message !== 'failed to parse document as <dmn:Definitions>') {\n    return null;\n  }\n\n  var olderDMNVersion = (\n    (xml.indexOf('\"http://www.omg.org/spec/DMN/20151101/dmn.xsd\"') !== -1 && '1.1') ||\n    (xml.indexOf('\"http://www.omg.org/spec/DMN/20180521/MODEL/\"') !== -1 && '1.2')\n  );\n\n  if (!olderDMNVersion) {\n    return null;\n  }\n\n  err = new Error(\n    'unsupported DMN ' + olderDMNVersion + ' file detected; ' +\n    'only DMN 1.3 files can be opened'\n  );\n\n  console.error(\n    'Cannot open what looks like a DMN ' + olderDMNVersion + ' diagram. ' +\n    'Please refer to https://bpmn.io/l/dmn-compatibility.html ' +\n    'to learn how to make the toolkit compatible with older DMN files',\n    err\n  );\n\n  return err;\n}\n\nfunction checkValidationError(err) {\n\n  // check if we can help the user by indicating wrong DMN 1.3 xml\n  // (in case he or the exporting tool did not get that right)\n\n  var pattern = /unparsable content <([^>]+)> detected([\\s\\S]*)$/,\n      match = pattern.exec(err.message);\n\n  if (!match) {\n    return null;\n  }\n\n  err.message =\n    'unparsable content <' + match[ 1 ] + '> detected; ' +\n    'this may indicate an invalid DMN 1.3 diagram file' + match[ 2 ];\n\n  return err;\n}\n\nfunction viewsEqual(a, b) {\n  if (!isDefined(a)) {\n    if (!isDefined(b)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  if (!isDefined(b)) {\n    return false;\n  }\n\n  // compare by element OR element ID equality\n  return a.element === b.element || a.id === b.id;\n}\n\nfunction viewNameChanged(a, b) {\n  return !a || !b || a.name !== b.name;\n}\n\nfunction safeExecute(viewer, method) {\n  if (isFunction(viewer[ method ])) {\n    viewer[ method ]();\n  }\n}\n"],"file":"Manager.js"}