{"version":3,"sources":["../../../../src/features/modeling/cmd/UpdatePropertiesHandler.js"],"names":["isObject","isDefined","reduce","getBusinessObject","ID","EditPropertiesHandler","elementRegistry","moddle","_elementRegistry","_moddle","context","element","properties","bo","updateProperties","changed","oldProperties","newProps","ids","result","value","key","propertyValue","get","isContainer","Error","isIdChange","unclaim","updateId","claim","set","$inject","newId","o"],"mappings":"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","sourcesContent":["import {\n  isObject,\n  isDefined,\n  reduce\n} from 'min-dash';\n\nimport {\n  getBusinessObject\n} from '../../../util/ModelUtil';\n\nconst ID = 'id';\n\n\n/**\n * A generic handler that implements property editing.\n */\nexport default class EditPropertiesHandler {\n\n  constructor(elementRegistry, moddle) {\n    this._elementRegistry = elementRegistry;\n    this._moddle = moddle;\n  }\n\n  /**\n   * <do>\n   */\n  execute(context) {\n\n    const {\n      element,\n      properties\n    } = context;\n\n    const bo = getBusinessObject(element);\n\n    const {\n      changed,\n      oldProperties\n    } = this.updateProperties(bo, properties);\n\n    context.oldProperties = oldProperties;\n\n    return [\n      ...changed,\n      element\n    ];\n  }\n\n  /**\n   * <undo>\n   */\n  revert(context) {\n    const {\n      element,\n      oldProperties\n    } = context;\n\n    var bo = getBusinessObject(element);\n\n    var {\n      changed\n    } = this.updateProperties(bo, oldProperties);\n\n    return [\n      ...changed,\n      element\n    ];\n  }\n\n\n  /**\n   * Update properties of the given business object\n   * and return { changed, oldProperties }.\n   */\n  updateProperties(bo, newProps) {\n\n    const ids = this._moddle.ids;\n\n    // Reduce over all new properties and return\n    //\n    // {\n    //  changed,\n    //  oldProperties\n    // }\n    return reduce(newProps, (result, value, key) => {\n\n      const propertyValue = bo.get(key);\n\n      // handle nested update\n      if (isContainer(value)) {\n\n        if (!isContainer(propertyValue)) {\n          throw new Error(\n            `non-existing property <${key}>: cannot update values`\n          );\n        }\n\n        let {\n          changed,\n          oldProperties\n        } = this.updateProperties(propertyValue, value);\n\n        return {\n          changed: [\n            ...result.changed,\n            ...changed,\n            propertyValue\n          ],\n          oldProperties: {\n            ...result.oldProperties,\n            [key]: oldProperties\n          }\n        };\n      }\n\n      // handle ID change\n      if (key === ID && isIdChange(bo, value)) {\n        ids.unclaim(bo[ID]);\n\n        this._elementRegistry.updateId(bo, value);\n\n        ids.claim(value, bo);\n      }\n\n      // handle plain update\n      bo.set(key, value);\n\n      return {\n        changed: result.changed,\n        oldProperties: {\n          ...result.oldProperties,\n          [key]: propertyValue\n        }\n      };\n\n    }, { changed: [], oldProperties: { } });\n  }\n\n}\n\nEditPropertiesHandler.$inject = [ 'elementRegistry', 'moddle' ];\n\n// helpers //////////////////////\n\nfunction isIdChange(element, newId) {\n  return element[ID] !== newId;\n}\n\n\nfunction isContainer(o) {\n  return (\n    isDefined(o) &&\n    isObject(o)\n  );\n}"],"file":"UpdatePropertiesHandler.js"}