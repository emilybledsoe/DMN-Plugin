{"version":3,"sources":["../../../src/components/utils/classNames.js"],"names":["newSet","elements","index","add","set","element","join","separator","classNames","args","forEach","item","type","length","Object","keys","key","value"],"mappings":";;;;;;;;;;;;;;;;AACA,SAASA,MAAT,GAAkB;AAChB,SAAO;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,KAAK,EAAE;AAFF,GAAP;AAID;;AAED,SAASC,GAAT,CAAaC,GAAb,EAAkBC,OAAlB,EAA2B;AAAA,MAGvBJ,QAHuB,GAKrBG,GALqB,CAGvBH,QAHuB;AAAA,MAIvBC,KAJuB,GAKrBE,GALqB,CAIvBF,KAJuB;;AAOzB,MAAIA,KAAK,CAACG,OAAD,CAAT,EAAoB;AAClB,WAAOD,GAAP;AACD,GAFD,MAEO;AACL,WAAO;AACLH,MAAAA,QAAQ,+BAAOA,QAAP,IAAiBI,OAAjB,EADH;AAELH,MAAAA,KAAK,oBACAA,KADA,sBAEFG,OAFE,EAEQ,IAFR;AAFA,KAAP;AAOD;AACF;;AAED,SAASC,IAAT,CAAcF,GAAd,EAAmBG,SAAnB,EAA8B;AAC5B,SAAOH,GAAG,CAACH,QAAJ,CAAaK,IAAb,CAAkBC,SAAlB,CAAP;AACD;;AAED,eAAe,SAASC,UAAT,GAA6B;AAE1C,MAAIJ,GAAG,GAAGJ,MAAM,EAAhB;;AAF0C,oCAANS,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAI1CA,EAAAA,IAAI,CAACC,OAAL,CAAa,UAASC,IAAT,EAAe;AAC1B,QAAMC,IAAI,WAAUD,IAAV,CAAV;;AAEA,QAAIC,IAAI,KAAK,QAAT,IAAqBD,IAAI,CAACE,MAAL,GAAc,CAAvC,EAA0C;AACxCT,MAAAA,GAAG,GAAGD,GAAG,CAACC,GAAD,EAAMO,IAAN,CAAT;AACD,KAFD,MAEO,IAAIC,IAAI,KAAK,QAAT,IAAqBD,IAAI,KAAK,IAAlC,EAAwC;AAE7CG,MAAAA,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBD,OAAlB,CAA0B,UAASM,GAAT,EAAc;AACtC,YAAMC,KAAK,GAAGN,IAAI,CAACK,GAAD,CAAlB;;AAEA,YAAIC,KAAJ,EAAW;AACTb,UAAAA,GAAG,GAAGD,GAAG,CAACC,GAAD,EAAMY,GAAN,CAAT;AACD;AACF,OAND;AAOD;AACF,GAfD;AAiBA,SAAOV,IAAI,CAACF,GAAD,EAAM,GAAN,CAAX;AACD","sourcesContent":["\nfunction newSet() {\n  return {\n    elements: [],\n    index: {}\n  };\n}\n\nfunction add(set, element) {\n\n  const {\n    elements,\n    index\n  } = set;\n\n  if (index[element]) {\n    return set;\n  } else {\n    return {\n      elements: [ ...elements, element ],\n      index: {\n        ...index,\n        [element]: true\n      }\n    };\n  }\n}\n\nfunction join(set, separator) {\n  return set.elements.join(separator);\n}\n\nexport default function classNames(...args) {\n\n  let set = newSet();\n\n  args.forEach(function(item) {\n    const type = typeof item;\n\n    if (type === 'string' && item.length > 0) {\n      set = add(set, item);\n    } else if (type === 'object' && item !== null) {\n\n      Object.keys(item).forEach(function(key) {\n        const value = item[key];\n\n        if (value) {\n          set = add(set, key);\n        }\n      });\n    }\n  });\n\n  return join(set, ' ');\n}"],"file":"classNames.js"}