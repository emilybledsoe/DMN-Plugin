{"version":3,"sources":["../../src/core/Sheet.js"],"names":["Sheet","elementRegistry","eventBus","_elementRegistry","_eventBus","_root","on","setRoot","root","oldRoot","fire","id","rows","cols","row","index","getRoot","length","cells","Error","addAtIndex","add","forEach","cell","idx","col","get","indexOf","removeAtIndex","undefined","remove","$inject","array","value","splice"],"mappings":"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","sourcesContent":["export default class Sheet {\n  constructor(elementRegistry, eventBus) {\n    this._elementRegistry = elementRegistry;\n    this._eventBus = eventBus;\n\n    this._root = null;\n\n    eventBus.on('table.clear', () => {\n      this.setRoot(null);\n    });\n  }\n\n  setRoot(root) {\n    if (this._root) {\n      const oldRoot = this._root;\n\n      this._eventBus.fire('root.remove', { root: oldRoot });\n\n      this._root = null;\n\n      this._eventBus.fire('root.removed', { root: oldRoot });\n    }\n\n    if (root) {\n      this._eventBus.fire('root.add', { root });\n    }\n\n    this._root = root;\n\n    if (root) {\n      this._eventBus.fire('root.added', { root });\n    }\n  }\n\n  getRoot() {\n    if (!this._root) {\n      this.setRoot({\n        id: '__implicitroot',\n        rows: [],\n        cols: []\n      });\n    }\n\n    return this._root;\n  }\n\n\n  /**\n   * Add row to sheet.\n   *\n   * @param {Object} row - Row.\n   */\n  addRow(row, index) {\n    const root = this.getRoot();\n\n    if (root.cols.length != row.cells.length) {\n      throw new Error('number of cells is not equal to number of cols');\n    }\n\n    if (typeof index === 'undefined') {\n      index = root.rows.length;\n    }\n\n    addAtIndex(index, root.rows, row);\n    row.root = root;\n\n    this._elementRegistry.add(row);\n\n    row.cells.forEach((cell, idx) => {\n      this._elementRegistry.add(cell);\n\n      cell.row = row;\n      cell.col = root.cols[idx];\n\n      addAtIndex(index, root.cols[idx].cells, cell);\n    });\n\n    this._eventBus.fire('row.add', { row });\n\n    return row;\n  }\n\n\n  /**\n   * Remove row from sheet.\n   *\n   * @param {Object|string} row - Row or row ID.\n   */\n  removeRow(row) {\n    const root = this.getRoot();\n\n    if (typeof row === 'string') {\n      row = this._elementRegistry.get(row);\n    }\n\n    const index = root.rows.indexOf(row);\n\n    if (index === -1) {\n      return;\n    }\n\n    removeAtIndex(index, root.rows);\n    row.root = undefined;\n\n    this._elementRegistry.remove(row);\n\n    row.cells.forEach((cell, idx) => {\n      this._elementRegistry.remove(cell);\n\n      cell.col = undefined;\n\n      removeAtIndex(index, root.cols[idx].cells);\n    });\n\n    this._eventBus.fire('row.remove', { row });\n  }\n\n  /**\n   * Add col to sheet.\n   *\n   * @param {Object} col\n   * @param {Number} [index]\n   */\n  addCol(col, index) {\n    const root = this.getRoot();\n\n    this._elementRegistry.add(col);\n\n    if (root.rows.length != col.cells.length) {\n      throw new Error('number of cells is not equal to number of rows');\n    }\n\n    if (typeof index === 'undefined') {\n      index = root.cols.length;\n    }\n\n    addAtIndex(index, root.cols, col);\n    col.root = root;\n\n    col.cells.forEach((cell, idx) => {\n      this._elementRegistry.add(cell);\n\n      cell.col = col;\n      cell.row = root.rows[idx];\n\n      addAtIndex(index, root.rows[idx].cells, cell);\n    });\n\n    this._eventBus.fire('col.add', { col });\n\n    return col;\n  }\n\n  /**\n   * Remove col from sheet.\n   *\n   * @param {Object|string} col - Col or col ID.\n   */\n  removeCol(col) {\n\n    const root = this.getRoot();\n\n    if (typeof col === 'string') {\n      col = this._elementRegistry.get(col);\n    }\n\n    const index = root.cols.indexOf(col);\n\n    if (index === -1) {\n      return;\n    }\n\n    removeAtIndex(index, root.cols);\n    col.root = undefined;\n\n    this._elementRegistry.remove(col);\n\n    col.cells.forEach((cell, idx) => {\n      this._elementRegistry.remove(cell);\n\n      cell.row = undefined;\n\n      removeAtIndex(index, root.rows[idx].cells);\n    });\n\n    this._eventBus.fire('col.remove', { col });\n  }\n\n  resized() {\n    this._eventBus.fire('sheet.resized');\n  }\n\n}\n\nSheet.$inject = [ 'elementRegistry', 'eventBus' ];\n\n\n// helpers /////////////\n\n/**\n * Insert value\n *\n * @param {number} index - Index to insert value at.\n * @param {Array} array - Array to insert value into.\n * @param {*} value - Value to insert.\n */\nfunction addAtIndex(index, array, value) {\n  return array.splice(index, 0, value);\n}\n\n/**\n *\n * @param {number} index - Index to remove.\n * @param {Array} array - Array to remove from.\n */\nfunction removeAtIndex(index, array) {\n  return array.splice(index, 1);\n}"],"file":"Sheet.js"}