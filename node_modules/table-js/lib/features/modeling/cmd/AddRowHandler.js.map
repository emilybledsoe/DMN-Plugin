{"version":3,"sources":["../../../../src/features/modeling/cmd/AddRowHandler.js"],"names":["AddRowHandler","sheet","elementFactory","_sheet","_elementFactory","context","root","getRoot","row","index","rows","length","newRoot","cells","cols","forEach","col","idx","cell","create","addRow","removeRow","$inject"],"mappings":";;;;;;AACA;;;IAGqBA,a;;;AAEnB,yBAAYC,KAAZ,EAAmBC,cAAnB,EAAmC;AAAA;;AACjC,SAAKC,MAAL,GAAcF,KAAd;AACA,SAAKG,eAAL,GAAuBF,cAAvB;AACD;AAGD;;;;;;;4BAGQG,O,EAAS;AAEf,UAAMJ,KAAK,GAAG,KAAKE,MAAnB;AAAA,UACMD,cAAc,GAAG,KAAKE,eAD5B;AAAA,UAEME,IAAI,GAAGL,KAAK,CAACM,OAAN,EAFb;AAFe,UAObC,GAPa,GASXH,OATW,CAObG,GAPa;AAAA,UAQbC,KARa,GASXJ,OATW,CAQbI,KARa;;AAWf,UAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAChCA,QAAAA,KAAK,GAAGJ,OAAO,CAACI,KAAR,GAAgBH,IAAI,CAACI,IAAL,CAAUC,MAAlC;AACD;;AAEDN,MAAAA,OAAO,CAACO,OAAR,GAAkBN,IAAlB;;AAEA,UAAI,CAACE,GAAG,CAACK,KAAJ,CAAUF,MAAf,EAAuB;AACrBL,QAAAA,IAAI,CAACQ,IAAL,CAAUC,OAAV,CAAkB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9B,cAAMC,IAAI,GAAGhB,cAAc,CAACiB,MAAf,CAAsB,MAAtB,EAA8B;AAAEX,YAAAA,GAAG,EAAHA,GAAF;AAAOQ,YAAAA,GAAG,EAAHA;AAAP,WAA9B,CAAb;AAEAR,UAAAA,GAAG,CAACK,KAAJ,CAAUI,GAAV,IAAiBC,IAAjB;AACD,SAJD;AAKD;;AAEDjB,MAAAA,KAAK,CAACmB,MAAN,CAAaZ,GAAb,EAAkBC,KAAlB;AAEA,aAAOR,KAAK,CAACM,OAAN,EAAP;AACD;AAGD;;;;;;2BAGOF,O,EAAS;AAAA,UAGZG,GAHY,GAIVH,OAJU,CAGZG,GAHY;AAMd,UAAMP,KAAK,GAAG,KAAKE,MAAnB;AAEAF,MAAAA,KAAK,CAACoB,SAAN,CAAgBb,GAAhB;AAEA,aAAOP,KAAK,CAACM,OAAN,EAAP;AACD;;;;;;SAxDkBP,a;AA4DrBA,aAAa,CAACsB,OAAd,GAAwB,CACtB,OADsB,EAEtB,gBAFsB,CAAxB","sourcesContent":["\n/**\n * A handler that implements row addition.\n */\nexport default class AddRowHandler {\n\n  constructor(sheet, elementFactory) {\n    this._sheet = sheet;\n    this._elementFactory = elementFactory;\n  }\n\n\n  /**\n   * <do>\n   */\n  execute(context) {\n\n    const sheet = this._sheet,\n          elementFactory = this._elementFactory,\n          root = sheet.getRoot();\n\n    let {\n      row,\n      index\n    } = context;\n\n    if (typeof index === 'undefined') {\n      index = context.index = root.rows.length;\n    }\n\n    context.newRoot = root;\n\n    if (!row.cells.length) {\n      root.cols.forEach((col, idx) => {\n        const cell = elementFactory.create('cell', { row, col });\n\n        row.cells[idx] = cell;\n      });\n    }\n\n    sheet.addRow(row, index);\n\n    return sheet.getRoot();\n  }\n\n\n  /**\n   * <undo>\n   */\n  revert(context) {\n\n    const {\n      row\n    } = context;\n\n    const sheet = this._sheet;\n\n    sheet.removeRow(row);\n\n    return sheet.getRoot();\n  }\n\n}\n\nAddRowHandler.$inject = [\n  'sheet',\n  'elementFactory'\n];"],"file":"AddRowHandler.js"}