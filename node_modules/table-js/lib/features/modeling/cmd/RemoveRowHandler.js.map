{"version":3,"sources":["../../../../src/features/modeling/cmd/RemoveRowHandler.js"],"names":["RemoveRowHandler","sheet","_sheet","context","root","getRoot","row","oldIndex","rows","indexOf","oldRoot","Error","id","removeRow","addRow","$inject"],"mappings":";;;;;;AACA;;;IAGqBA,gB;;;AAEnB,4BAAYC,KAAZ,EAAmB;AAAA;;AACjB,SAAKC,MAAL,GAAcD,KAAd;AACD;AAGD;;;;;;;4BAGQE,O,EAAS;AAEf,UAAMF,KAAK,GAAG,KAAKC,MAAnB;AAAA,UACME,IAAI,GAAGH,KAAK,CAACI,OAAN,EADb;AAFe,UAMbC,GANa,GAOXH,OAPW,CAMbG,GANa,EASf;;AACA,UAAMC,QAAQ,GAAGJ,OAAO,CAACI,QAAR,GAAmBH,IAAI,CAACI,IAAL,CAAUC,OAAV,CAAkBH,GAAlB,CAApC;AAEAH,MAAAA,OAAO,CAACO,OAAR,GAAkBJ,GAAG,CAACF,IAAtB;;AAEA,UAAIG,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACnB,cAAM,IAAII,KAAJ,eAAiBL,GAAG,CAACM,EAArB,mBAAN;AACD;;AAEDX,MAAAA,KAAK,CAACY,SAAN,CAAgBP,GAAhB;AAEA,aAAOL,KAAK,CAACI,OAAN,EAAP;AACD;AAGD;;;;;;2BAGOF,O,EAAS;AAAA,UAGZG,GAHY,GAKVH,OALU,CAGZG,GAHY;AAAA,UAIZC,QAJY,GAKVJ,OALU,CAIZI,QAJY;AAOd,UAAMN,KAAK,GAAG,KAAKC,MAAnB;AAEAD,MAAAA,KAAK,CAACa,MAAN,CAAaR,GAAb,EAAkBC,QAAlB;AAEA,aAAON,KAAK,CAACI,OAAN,EAAP;AACD;;;;;;SAjDkBL,gB;AAqDrBA,gBAAgB,CAACe,OAAjB,GAA2B,CACzB,OADyB,CAA3B","sourcesContent":["\n/**\n * A handler that implements row deletion.\n */\nexport default class RemoveRowHandler {\n\n  constructor(sheet) {\n    this._sheet = sheet;\n  }\n\n\n  /**\n   * <do>\n   */\n  execute(context) {\n\n    const sheet = this._sheet,\n          root = sheet.getRoot();\n\n    let {\n      row\n    } = context;\n\n    // retrieve and remember previous row position\n    const oldIndex = context.oldIndex = root.rows.indexOf(row);\n\n    context.oldRoot = row.root;\n\n    if (oldIndex === -1) {\n      throw new Error(`row#${row.id} not in sheet`);\n    }\n\n    sheet.removeRow(row);\n\n    return sheet.getRoot();\n  }\n\n\n  /**\n   * <undo>\n   */\n  revert(context) {\n\n    const {\n      row,\n      oldIndex\n    } = context;\n\n    const sheet = this._sheet;\n\n    sheet.addRow(row, oldIndex);\n\n    return sheet.getRoot();\n  }\n\n}\n\nRemoveRowHandler.$inject = [\n  'sheet'\n];"],"file":"RemoveRowHandler.js"}