{"version":3,"sources":["../../../src/features/selection/SelectionBehavior.js"],"names":["SelectionBehavior","elementRegistry","eventBus","renderer","selection","_elementRegistry","_renderer","_selection","on","id","element","get","select","row","currentSelection","deselect","col","$inject"],"mappings":";;AAAA;;;IAGqBA,iB,GAEnB,2BAAYC,eAAZ,EAA6BC,QAA7B,EAAuCC,QAAvC,EAAiDC,SAAjD,EAA4D;AAAA;;AAC1D,OAAKC,gBAAL,GAAwBJ,eAAxB;AACA,OAAKK,SAAL,GAAiBH,QAAjB;AACA,OAAKI,UAAL,GAAkBH,SAAlB;AAEAF,EAAAA,QAAQ,CAACM,EAAT,CAAY,CAAE,YAAF,EAAgB,kBAAhB,CAAZ,EAAiD,gBAAY;AAAA,QAATC,EAAS,QAATA,EAAS;AAC3D,QAAMC,OAAO,GAAGT,eAAe,CAACU,GAAhB,CAAoBF,EAApB,CAAhB;;AAEA,QAAI,CAACC,OAAL,EAAc;AACZ;AACD;;AAEDN,IAAAA,SAAS,CAACQ,MAAV,CAAiBF,OAAjB;AACD,GARD;AAUAR,EAAAA,QAAQ,CAACM,EAAT,CAAY,YAAZ,EAA0B,iBAAa;AAAA,QAAVK,GAAU,SAAVA,GAAU;AACrC,QAAMC,gBAAgB,GAAGV,SAAS,CAACO,GAAV,EAAzB;;AAEA,QAAI,CAACG,gBAAL,EAAuB;AACrB;AACD;;AAED,QAAID,GAAG,KAAKC,gBAAgB,CAACD,GAA7B,EAAkC;AAChCT,MAAAA,SAAS,CAACW,QAAV;AACD;AACF,GAVD;AAYAb,EAAAA,QAAQ,CAACM,EAAT,CAAY,YAAZ,EAA0B,iBAAa;AAAA,QAAVQ,GAAU,SAAVA,GAAU;AACrC,QAAMF,gBAAgB,GAAGV,SAAS,CAACO,GAAV,EAAzB;;AAEA,QAAI,CAACG,gBAAL,EAAuB;AACrB;AACD;;AAED,QAAIE,GAAG,KAAKF,gBAAgB,CAACE,GAA7B,EAAkC;AAChCZ,MAAAA,SAAS,CAACW,QAAV;AACD;AACF,GAVD;AAWD,C;;SAxCkBf,iB;AA4CrBA,iBAAiB,CAACiB,OAAlB,GAA4B,CAC1B,iBAD0B,EAE1B,UAF0B,EAG1B,UAH0B,EAI1B,WAJ0B,CAA5B","sourcesContent":["/**\r\n * Selects table cells on on left & right click.\r\n */\r\nexport default class SelectionBehavior {\r\n\r\n  constructor(elementRegistry, eventBus, renderer, selection) {\r\n    this._elementRegistry = elementRegistry;\r\n    this._renderer = renderer;\r\n    this._selection = selection;\r\n\r\n    eventBus.on([ 'cell.click', 'cell.contextmenu'], ({ id }) => {\r\n      const element = elementRegistry.get(id);\r\n\r\n      if (!element) {\r\n        return;\r\n      }\r\n\r\n      selection.select(element);\r\n    });\r\n\r\n    eventBus.on('row.remove', ({ row }) => {\r\n      const currentSelection = selection.get();\r\n\r\n      if (!currentSelection) {\r\n        return;\r\n      }\r\n\r\n      if (row === currentSelection.row) {\r\n        selection.deselect();\r\n      }\r\n    });\r\n\r\n    eventBus.on('col.remove', ({ col }) => {\r\n      const currentSelection = selection.get();\r\n\r\n      if (!currentSelection) {\r\n        return;\r\n      }\r\n\r\n      if (col === currentSelection.col) {\r\n        selection.deselect();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\nSelectionBehavior.$inject = [\r\n  'elementRegistry',\r\n  'eventBus',\r\n  'renderer',\r\n  'selection'\r\n];"],"file":"SelectionBehavior.js"}