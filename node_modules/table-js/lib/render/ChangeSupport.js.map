{"version":3,"sources":["../../src/render/ChangeSupport.js"],"names":["ChangeSupport","eventBus","_listeners","on","elements","elementsChanged","context","oldRootId","root","id","once","newRootId","updateId","element","newId","invoked","elementsLength","length","i","listenersLength","j","listener","idx","indexOf","splice","oldId","$inject"],"mappings":"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","sourcesContent":["export default class ChangeSupport {\n  constructor(eventBus) {\n    this._listeners = {};\n\n    eventBus.on('elements.changed', ({ elements }) => {\n      this.elementsChanged(elements);\n    });\n\n    eventBus.on('root.remove', context => {\n      const oldRootId = context.root.id;\n\n      if (this._listeners[oldRootId]) {\n\n        eventBus.once('root.add', context => {\n          const newRootId = context.root.id;\n\n          this.updateId(oldRootId, newRootId);\n        });\n\n      }\n\n    });\n\n    eventBus.on('element.updateId', ({ element, newId }) => {\n      this.updateId(element.id, newId);\n    });\n  }\n\n  elementsChanged(elements) {\n    const invoked = {};\n\n    const elementsLength = elements.length;\n\n    for (let i = 0; i < elementsLength; i++) {\n      const { id } = elements[i];\n\n      if (invoked[id]) {\n        return;\n      }\n\n      invoked[id] = true;\n\n      const listenersLength = this._listeners[id] && this._listeners[id].length;\n\n      if (listenersLength) {\n        for (let j = 0; j < listenersLength; j++) {\n\n          // listeners might remove themselves before they get called\n          this._listeners[id][j] && this._listeners[id][j]();\n        }\n      }\n    }\n  }\n\n  onElementsChanged(id, listener) {\n    if (!this._listeners[id]) {\n      this._listeners[id] = [];\n    }\n\n    // avoid push for better performance\n    this._listeners[id][this._listeners[id].length] = listener;\n  }\n\n  offElementsChanged(id, listener) {\n    if (!this._listeners[id]) {\n      return;\n    }\n\n    if (listener) {\n      const idx = this._listeners[id].indexOf(listener);\n\n      if (idx !== -1) {\n        this._listeners[id].splice(idx, 1);\n      }\n    } else {\n      this._listeners[id].length = 0;\n    }\n  }\n\n  updateId(oldId, newId) {\n    if (this._listeners[oldId]) {\n\n      this._listeners[newId] = this._listeners[oldId];\n\n      delete this._listeners[oldId];\n\n    }\n  }\n}\n\nChangeSupport.$inject = [ 'eventBus' ];"],"file":"ChangeSupport.js"}